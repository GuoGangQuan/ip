package gloqi.ui;

import gloqi.command.Command;
import gloqi.command.CommandParser;
import gloqi.task.Deadline;
import gloqi.task.Event;
import gloqi.task.Task;
import gloqi.task.Todo;

// this Javadoc is generated by chatgpt

/**
 * Represents a chatbot that manages tasks.
 * The chatbot reads user commands, executes them, and stores tasks.
 */
public class Gloqi {

    private static final String CHATBOT_NAME = "Gloqi";
    private final Ui ui;
    private BankList bankList;

    /**
     * Creates a new Gloqi chatbot with a data file for storing tasks.
     *
     * @param filePath path to the task data file
     */
    public Gloqi(String filePath) {
        this.bankList = new BankList(new DataManager(filePath));
        this.ui = new Ui(CHATBOT_NAME);
    }

    /**
     * Creates a new Gloqi chatbot with default data file path:data/data.txt for storing tasks.
     */
    public Gloqi() {
        this.bankList = new BankList(new DataManager("data/data.txt"));
        this.ui = new Ui(CHATBOT_NAME);
    }


    /**
     * Runs the main logic of the chatbot.
     * Reads user input, parses commands, executes them, and continues
     * until the user issues the BYE command.
     *
     * @param userInput user input string
     * @return response String from the chatbot
     */
    public String run(String userInput) {
        Task inputTask;
        String response;
        Command cmd;
        try {
            bankList = bankList.loadBankList();
        } catch (GloqiException e) {
            Ui.printInPrompt(e.getMessage());
        }
        try {
            CommandParser commandParser = new CommandParser(userInput);
            cmd = commandParser.getCmd();
            assert cmd != null : "cmd should not be null";
            switch (cmd) {
            case LIST -> response = bankList.printList();
            case MARK -> response = bankList.markTask(commandParser.getIntArg());
            case UNMARK -> response = bankList.unmarkTask(commandParser.getIntArg());
            case TODO -> {
                inputTask = new Todo(commandParser.getStringArg()[0]);
                response = bankList.addTask(inputTask);
            }
            case DEADLINE -> {
                inputTask = new Deadline(commandParser.getStringArg());
                response = bankList.addTask(inputTask);
            }
            case EVENT -> {
                inputTask = new Event(commandParser.getStringArg());
                response = bankList.addTask(inputTask);
            }
            case DELETE -> response = bankList.deleteTask(commandParser.getIntArg());
            case SHOW -> response = bankList.printList(commandParser.getDateArg());
            case FIND -> response = bankList.findTask(commandParser.getStringArg()[0]);
            case BYE -> response = ui.getEndMessage();
            default -> throw new GloqiException("""
                    Invalid command, only following commands are supported:
                    list, mark, unmark, bye, deadline, event, todo, show, delete, find""");
            }
        } catch (GloqiException e) {
            response = e.getMessage();
        }

        return response;
    }

    public String getGreeting() {
        return ui.getGreetMessage();
    }
}
