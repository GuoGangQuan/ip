package gloqi.ui;

import gloqi.command.Command;
import gloqi.command.CommandParser;
import gloqi.task.Deadline;
import gloqi.task.Event;
import gloqi.task.Task;
import gloqi.task.Todo;

// this Javadoc is generated by chatgpt

/**
 * Represents a chatbot that manages tasks.
 * The chatbot reads user commands, executes them, and stores tasks.
 */
public class Gloqi {

    private final static String CHATBOT_NAME = "Gloqi";
    private final Ui ui;
    private BankList bankList;

    /**
     * Creates a new Gloqi chatbot with a data file for storing tasks.
     *
     * @param filePath path to the task data file
     */
    public Gloqi(String filePath) {
        this.bankList = new BankList(new DataManager(filePath));
        this.ui = new Ui(CHATBOT_NAME);
    }

    /**
     * The main entry point of the application.
     *
     * @param args command-line arguments (not used)
     */
    public static void main(String[] args) {
        new Gloqi("data/data.txt").run();
    }

    /**
     * Runs the main loop of the chatbot.
     * Reads user input, parses commands, executes them, and continues
     * until the user issues the BYE command.
     */
    public void run() {
        ui.getGreetMessage();
        String userInput;
        Task inputTask;
        Command cmd = Command.INVALID;
        try {
            bankList = bankList.loadBankList();
        } catch (GloqiException e) {
            Ui.printInPrompt(e.getMessage());
        }
        while (!cmd.equals(Command.BYE)) {
            userInput = ui.getInput();
            try {
                CommandParser commandParser = new CommandParser(userInput);
                cmd = commandParser.getCmd();
                switch (cmd) {
                case LIST -> bankList.printList();
                case MARK -> {
                    bankList.markTask(commandParser.getIntArg());
                }
                case UNMARK -> {
                    bankList.unmarkTask(commandParser.getIntArg());
                }
                case TODO -> {
                    inputTask = new Todo(commandParser.getStringArg()[0]);
                    bankList.addTask(inputTask);
                }
                case DEADLINE -> {
                    inputTask = new Deadline(commandParser.getStringArg());
                    bankList.addTask(inputTask);
                }
                case EVENT -> {
                    inputTask = new Event(commandParser.getStringArg());
                    bankList.addTask(inputTask);
                }
                case DELETE -> {
                    bankList.deleteTask(commandParser.getIntArg());
                }
                case SHOW -> bankList.printList(commandParser.getDateArg());
                case FIND -> {
                    bankList.findTask(commandParser.getStringArg()[0]);
                }
                }
            } catch (GloqiException e) {
                Ui.printInPrompt(e.getMessage());
            }

        }
        ui.getEndMessage();
    }
}